name: Build documentation

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
    - released

jobs:
  docs:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          sudo apt-get install pandoc
          python -m pip install --upgrade pip
          pip install pandas numpy netCDF4 pyarrow matplotlib Sphinx myst-parser sphinx-rtd-theme
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build documentation
        run: |
          sphinx-build docs docs/_build/html

      - name: Clone gh-pages branch
        if: success() && (github.event.release || (github.ref == 'refs/heads/master'))
        uses: actions/checkout@master
        with:
          ref: gh-pages
          path: pages-clone

      - name: Update development documentation
        if: success() && (github.event.release || (github.ref == 'refs/heads/master'))
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          cd pages-clone
          if [ -d dev ]; then
            git rm -rf dev
          fi
          mkdir dev
          cp -R ../docs/_build/html/* dev
          touch .nojekyll
          git add .nojekyll
          git add *
          git commit --allow-empty -m"update development documentation"
          git push
          cd ..

      - name: Update release documentation
        if: success() && (github.event.release || (github.ref == 'refs/heads/master'))
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          cd pages-clone

          # remove current release documentation (not dev!)
          for DIRECTORY in $(ls -d */ | sed 's|dev/||') ; do
            git rm -rf "$DIRECTORY"
          done
          for FILE in $(ls | sed 's|dev||') ; do
            git rm "$FILE"
          done

          # copy
          cp -R ../docs/_build/html/* .
          git add *
          git commit --allow-empty -m"update release documentation"
          git push
